#!/usr/bin/env ruby

require "fileutils"
require "rubygems"
require "objectiveflickr"
require "optimist"

class FlickrGetter
  attr_reader :root_dir

  def initialize(root_dir)
    @root_dir = root_dir
  end

  def flickr
    @flickr ||= FlickrInvocation.new(api_key)
  end

  def api_key
    '0309264c0827bdb4ebcbff7c5b4a14a3'
  end

  def extract_photo_id(arg)
    if arg =~ %r[\Ahttp://farm\d+.static.flickr.com/\d+/(\d+)_.*\.jpg\Z]
      photo_id = $1
    elsif arg =~ /(\d*)\D*\Z/
      photo_id = $1
    else
      raise "Parse error: #{arg}"
    end
  end

  # https://www.flickr.com/services/api/flickr.photos.licenses.getInfo.html
  def licenses
    {
      "0" => "non-free",
      "1" => "cc-nc-sa",
      "2" => "cc-nc",
      "3" => "cc-nc-nd",
      "4" => "cc-by",
      "5" => "cc-sa",
      "6" => "cc-nd",
      "9" => "public-domain",
    }
  end

  def comment_from_getinfo(r)
    title      = r["photo"]["title"]["_content"]
    author     = r["photo"]["owner"]["username"]
    license_id = r["photo"]["license"]
    license    = licenses[license_id] or raise "Unknown license #{license_id}"
    "#{title} by #{author} from flickr (#{license.upcase})"
  end

  def filename_from_getinfo(r)
    title_fn   = r["photo"]["title"]["_content"].downcase.gsub(/ /,"_").gsub(/[^a-z0-9_]/,"")
    author_fn  = r["photo"]["owner"]["username"].downcase.gsub(/ /,"_").gsub(/[^a-z0-9_]/,"")
    license    = licenses[r["photo"]["license"]]
    format     = r["photo"]["originalformat"] || "jpg"
    "#{root_dir}/#{title_fn}_by_#{author_fn}_from_flickr_#{license}.#{format}"
  end

  def url_from_getinfo(r)
    server_id = r["photo"]["server"]
    secret    = r["photo"]["originalsecret"]
    farm      = r["photo"]["farm"]
    "http://farm#{farm}.static.flickr.com/#{server_id}/#{photo_id}_#{secret}_o.#{format}"
  end

  def url_from_getsizes(r)
    r["sizes"]["size"].max_by{|x| x["width"].to_i}["source"]
  end

  def get!(arg)
    photo_id = extract_photo_id(arg)
    r1 = flickr.call("flickr.photos.getInfo", :photo_id => photo_id)
    r2 = flickr.call("flickr.photos.getSizes", :photo_id => photo_id)

    comment  = comment_from_getinfo(r1)
    filename = filename_from_getinfo(r1)
    url      = url_from_getsizes(r2)

    if url
      if File.exists?(filename)
        puts comment
        puts "Already exists: #{filename}"
      else
        FileUtils.mkdir_p File.dirname(filename)
        system "wget", "-nv", url, "-O", filename
        puts url
        puts comment
        puts filename
      end
    else
      puts comment
      puts "Failed to get #{filename}"
    end
  end
end

opts = Optimist::options do
  opt :out, "Directory to save files to", :default => "#{ENV["HOME"]}/Downloads"
end

fg = FlickrGetter.new(opts[:out])

if ARGV.empty?
  STDIN.readlines.map(&:strip).each do |arg|
    fg.get! arg
  end
else
  ARGV.each do |arg|
    fg.get! arg
  end
end
